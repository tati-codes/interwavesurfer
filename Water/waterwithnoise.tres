[gd_resource type="VisualShader" load_steps=22 format=3 uid="uid://b8od846l1d5av"]

[ext_resource type="Texture2D" uid="uid://csqdfovsxctsv" path="res://Water/waternoise2.tres" id="1_pv8i7"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_4uy8g"]
output_port_for_preview = 4
default_input_values = [0, Quaternion(1.1, 1.1, 1.1, 1.1), 1, Quaternion(1.8, 1.21, 1.25, 1.5)]
expanded_output_ports = [0]
op_type = 2
operator = 5

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_cxou1"]
default_input_values = [0, Vector4(-0.2, 0, 0, 0), 1, Vector4(1.2, 1.2, 1.2, 1.2), 2, Vector4(0, 0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vddc8"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_q1iem"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(0.231373, 0.768627, 0.870588, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_r4lc6"]
noise_type = 2
frequency = 0.0328
fractal_type = 2

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_hrpwm"]
seamless = true
noise = SubResource("FastNoiseLite_r4lc6")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_mmdbq"]
texture = SubResource("NoiseTexture2D_hrpwm")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_s66ef"]
default_input_values = [1, Vector2(0.05, 0.05), 2, Vector2(0.1, 0.1)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8w1nb"]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_jfesd"]
input_name = "time"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_mm0fm"]
default_input_values = [1, Vector2(-0.01, -0.03), 2, Vector2(-0.1, -0.1)]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_gl4jp"]
expanded_output_ports = [0]
texture = ExtResource("1_pv8i7")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_8up8y"]
input_name = "backlight"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_lwplk"]
output_port_for_preview = 0
default_input_values = [0, Vector4(0, 0, 0, 0), 1, Vector4(2, 2, 2, 2), 2, Vector4(0, 0, 0, 0)]
op_type = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7o4dj"]
input_name = "time"

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_xt5aj"]
default_input_values = [1, Vector2(0.1, 0.02), 2, Vector2(0.5, 0.5)]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_smpl6"]
texture = ExtResource("1_pv8i7")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fduoe"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_d5bau"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_orr3w"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_vtx_5;
uniform vec4 ColorParameter : source_color = vec4(0.231373, 0.768627, 0.870588, 1.000000);
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_9;



void vertex() {
// Input:3
	float n_out3p0 = TIME;


// UVFunc:4
	vec2 n_in4p1 = vec2(0.10000, 0.02000);
	vec2 n_out4p0 = vec2(n_out3p0) * n_in4p1 + UV;


// Texture2D:5
	vec4 n_out5p0 = texture(tex_vtx_5, n_out4p0);


// Input:7
	vec3 n_out7p0 = NORMAL;


// VectorOp:8
	vec3 n_in8p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out8p0 = n_out7p0 + n_in8p1;


// Input:6
	vec3 n_out6p0 = VERTEX;


// MultiplyAdd:2
	vec4 n_out2p0 = fma(n_out5p0, vec4(n_out8p0, 0.0), vec4(n_out6p0, 0.0));


// Output:0
	VERTEX = vec3(n_out2p0.xyz);


}

void fragment() {
// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// Input:6
	float n_out6p0 = TIME;


// UVFunc:5
	vec2 n_in5p1 = vec2(0.05000, 0.05000);
	vec2 n_out5p0 = vec2(n_out6p0) * n_in5p1 + UV;


// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, n_out5p0);


// Input:7
	float n_out7p0 = TIME;


// UVFunc:8
	vec2 n_in8p1 = vec2(-0.01000, -0.03000);
	vec2 n_out8p0 = vec2(n_out7p0) * n_in8p1 + UV;


// Texture2D:9
	vec4 n_out9p0 = texture(tex_frg_9, n_out8p0);


// MultiplyAdd:12
	vec4 n_in12p2 = vec4(0.00000, 0.00000, 0.00000, 0.00000);
	vec4 n_out12p0 = fma(n_out3p0, n_out9p0, n_in12p2);


// VectorOp:11
	vec4 n_in11p1 = vec4(1.80000, 1.21000, 1.25000, 1.50000);
	vec4 n_out11p0 = pow(n_out12p0, n_in11p1);


// VectorOp:13
	vec4 n_out13p0 = n_out2p0 + n_out11p0;


// Output:0
	ALBEDO = vec3(n_out13p0.xyz);


}
"
graph_offset = Vector2(-148.141, -1.23912)
nodes/vertex/0/position = Vector2(540, 220)
nodes/vertex/2/node = SubResource("VisualShaderNodeMultiplyAdd_lwplk")
nodes/vertex/2/position = Vector2(160, 480)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_7o4dj")
nodes/vertex/3/position = Vector2(-1040, 520)
nodes/vertex/4/node = SubResource("VisualShaderNodeUVFunc_xt5aj")
nodes/vertex/4/position = Vector2(-680, 420)
nodes/vertex/5/node = SubResource("VisualShaderNodeTexture_smpl6")
nodes/vertex/5/position = Vector2(-360, 380)
nodes/vertex/6/node = SubResource("VisualShaderNodeInput_fduoe")
nodes/vertex/6/position = Vector2(-180, 620)
nodes/vertex/7/node = SubResource("VisualShaderNodeInput_d5bau")
nodes/vertex/7/position = Vector2(-580, 800)
nodes/vertex/8/node = SubResource("VisualShaderNodeVectorOp_orr3w")
nodes/vertex/8/position = Vector2(-200, 740)
nodes/vertex/connections = PackedInt32Array(4, 0, 5, 0, 5, 0, 2, 0, 2, 0, 0, 0, 6, 0, 2, 2, 7, 0, 8, 0, 8, 0, 2, 1, 3, 0, 4, 2)
nodes/fragment/0/position = Vector2(520, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_q1iem")
nodes/fragment/2/position = Vector2(-613.052, 181.789)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_mmdbq")
nodes/fragment/3/position = Vector2(-920, 540)
nodes/fragment/5/node = SubResource("VisualShaderNodeUVFunc_s66ef")
nodes/fragment/5/position = Vector2(-1240, 580)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_8w1nb")
nodes/fragment/6/position = Vector2(-1600, 680)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_jfesd")
nodes/fragment/7/position = Vector2(-1640, 1060)
nodes/fragment/8/node = SubResource("VisualShaderNodeUVFunc_mm0fm")
nodes/fragment/8/position = Vector2(-1280, 960)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_gl4jp")
nodes/fragment/9/position = Vector2(-960, 920)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_4uy8g")
nodes/fragment/11/position = Vector2(-320, 620)
nodes/fragment/12/node = SubResource("VisualShaderNodeMultiplyAdd_cxou1")
nodes/fragment/12/position = Vector2(-580, 720)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_vddc8")
nodes/fragment/13/position = Vector2(-20, 400)
nodes/fragment/connections = PackedInt32Array(5, 0, 3, 0, 8, 0, 9, 0, 6, 0, 5, 2, 7, 0, 8, 2, 11, 0, 13, 1, 2, 0, 13, 0, 9, 0, 12, 1, 3, 0, 12, 0, 12, 0, 11, 0, 13, 0, 0, 0)
nodes/light/2/node = SubResource("VisualShaderNodeInput_8up8y")
nodes/light/2/position = Vector2(-60, 160)
